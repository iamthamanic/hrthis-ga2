{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/halteverbotsocialmacpro/Desktop/ars%20vivai/HRthis/HRthis/refactor/fe-starter-pack-master/src/lib/antd-theme.ts"],"sourcesContent":["/**\n * Ant Design Theme Configuration\n * Provides design tokens that work with both Ant Design and Radix UI\n */\n\nimport { ThemeConfig } from 'antd';\nimport { blue, green, red, orange, gray } from '@ant-design/colors';\n\nexport const antdTheme: ThemeConfig = {\n  token: {\n    // Primary Colors (HRthis Blue)\n    colorPrimary: '#1890ff',\n    colorSuccess: green[6],\n    colorWarning: orange[6],\n    colorError: red[6],\n    colorInfo: blue[6],\n    \n    // Background Colors\n    colorBgBase: '#ffffff',\n    colorBgContainer: '#ffffff',\n    colorBgElevated: '#ffffff',\n    colorBgLayout: '#f5f5f5',\n    \n    // Text Colors\n    colorText: '#000000',\n    colorTextSecondary: '#666666',\n    colorTextTertiary: '#999999',\n    \n    // Border & Radius\n    borderRadius: 8,\n    borderRadiusLG: 12,\n    borderRadiusSM: 4,\n    \n    // Typography\n    fontSize: 14,\n    fontSizeLG: 16,\n    fontSizeSM: 12,\n    fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif`,\n    \n    // Spacing\n    size: 16,\n    sizeStep: 4,\n    sizeUnit: 4,\n    \n    // Height Controls\n    controlHeight: 32,\n    controlHeightLG: 40,\n    controlHeightSM: 24,\n    \n    // Shadows\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.15)',\n    boxShadowSecondary: '0 6px 16px rgba(0, 0, 0, 0.08)',\n    \n    // Motion\n    motionDurationSlow: '0.3s',\n    motionDurationMid: '0.2s',\n    motionDurationFast: '0.1s',\n  },\n  \n  components: {\n    Button: {\n      borderRadius: 8,\n      controlHeight: 32,\n      controlHeightLG: 40,\n      controlHeightSM: 24,\n    },\n    Input: {\n      borderRadius: 8,\n      controlHeight: 32,\n    },\n    Select: {\n      borderRadius: 8,\n      controlHeight: 32,\n    },\n    Card: {\n      borderRadius: 12,\n      paddingLG: 24,\n    },\n    Table: {\n      borderRadius: 8,\n    },\n    Modal: {\n      borderRadius: 12,\n    },\n    Drawer: {\n      borderRadius: 12,\n    }\n  }\n};\n\n// CSS Variables fÃ¼r Radix UI Komponenten\nexport const cssVariables = `\n  :root {\n    /* Colors */\n    --color-primary: ${antdTheme.token?.colorPrimary};\n    --color-success: ${antdTheme.token?.colorSuccess};\n    --color-warning: ${antdTheme.token?.colorWarning};\n    --color-error: ${antdTheme.token?.colorError};\n    --color-text: ${antdTheme.token?.colorText};\n    --color-text-secondary: ${antdTheme.token?.colorTextSecondary};\n    --color-bg: ${antdTheme.token?.colorBgBase};\n    --color-bg-container: ${antdTheme.token?.colorBgContainer};\n    \n    /* Border Radius */\n    --border-radius: ${antdTheme.token?.borderRadius}px;\n    --border-radius-lg: ${antdTheme.token?.borderRadiusLG}px;\n    --border-radius-sm: ${antdTheme.token?.borderRadiusSM}px;\n    \n    /* Typography */\n    --font-size: ${antdTheme.token?.fontSize}px;\n    --font-size-lg: ${antdTheme.token?.fontSizeLG}px;\n    --font-size-sm: ${antdTheme.token?.fontSizeSM}px;\n    --font-family: ${antdTheme.token?.fontFamily};\n    \n    /* Control Heights */\n    --control-height: ${antdTheme.token?.controlHeight}px;\n    --control-height-lg: ${antdTheme.token?.controlHeightLG}px;\n    --control-height-sm: ${antdTheme.token?.controlHeightSM}px;\n    \n    /* Shadows */\n    --box-shadow: ${antdTheme.token?.boxShadow};\n    --box-shadow-secondary: ${antdTheme.token?.boxShadowSecondary};\n    \n    /* Spacing */\n    --spacing-xs: 4px;\n    --spacing-sm: 8px;\n    --spacing-md: 16px;\n    --spacing-lg: 24px;\n    --spacing-xl: 32px;\n    --spacing-xxl: 48px;\n  }\n`;\n\n// Tailwind-kompatible Klassen basierend auf Ant Design Tokens\nexport const themeClasses = {\n  colors: {\n    primary: 'text-[var(--color-primary)]',\n    success: 'text-[var(--color-success)]',\n    warning: 'text-[var(--color-warning)]',\n    error: 'text-[var(--color-error)]',\n    text: 'text-[var(--color-text)]',\n    textSecondary: 'text-[var(--color-text-secondary)]',\n  },\n  backgrounds: {\n    primary: 'bg-[var(--color-primary)]',\n    success: 'bg-[var(--color-success)]',\n    warning: 'bg-[var(--color-warning)]',\n    error: 'bg-[var(--color-error)]',\n    container: 'bg-[var(--color-bg-container)]',\n  },\n  spacing: {\n    xs: 'p-[var(--spacing-xs)]',\n    sm: 'p-[var(--spacing-sm)]',\n    md: 'p-[var(--spacing-md)]',\n    lg: 'p-[var(--spacing-lg)]',\n    xl: 'p-[var(--spacing-xl)]',\n  },\n  borders: {\n    radius: 'rounded-[var(--border-radius)]',\n    radiusLg: 'rounded-[var(--border-radius-lg)]',\n    radiusSm: 'rounded-[var(--border-radius-sm)]',\n  },\n  heights: {\n    control: 'h-[var(--control-height)]',\n    controlLg: 'h-[var(--control-height-lg)]',\n    controlSm: 'h-[var(--control-height-sm)]',\n  }\n};"],"names":[],"mappings":"AAAA;;;CAGC;;;;;AAGD;;AAEO,MAAM,YAAyB;IACpC,OAAO;QACL,+BAA+B;QAC/B,cAAc;QACd,cAAc,2IAAA,CAAA,QAAK,CAAC,EAAE;QACtB,cAAc,2IAAA,CAAA,SAAM,CAAC,EAAE;QACvB,YAAY,2IAAA,CAAA,MAAG,CAAC,EAAE;QAClB,WAAW,2IAAA,CAAA,OAAI,CAAC,EAAE;QAElB,oBAAoB;QACpB,aAAa;QACb,kBAAkB;QAClB,iBAAiB;QACjB,eAAe;QAEf,cAAc;QACd,WAAW;QACX,oBAAoB;QACpB,mBAAmB;QAEnB,kBAAkB;QAClB,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAEhB,aAAa;QACb,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,YAAY,CAAC,0FAA0F,CAAC;QAExG,UAAU;QACV,MAAM;QACN,UAAU;QACV,UAAU;QAEV,kBAAkB;QAClB,eAAe;QACf,iBAAiB;QACjB,iBAAiB;QAEjB,UAAU;QACV,WAAW;QACX,oBAAoB;QAEpB,SAAS;QACT,oBAAoB;QACpB,mBAAmB;QACnB,oBAAoB;IACtB;IAEA,YAAY;QACV,QAAQ;YACN,cAAc;YACd,eAAe;YACf,iBAAiB;YACjB,iBAAiB;QACnB;QACA,OAAO;YACL,cAAc;YACd,eAAe;QACjB;QACA,QAAQ;YACN,cAAc;YACd,eAAe;QACjB;QACA,MAAM;YACJ,cAAc;YACd,WAAW;QACb;QACA,OAAO;YACL,cAAc;QAChB;QACA,OAAO;YACL,cAAc;QAChB;QACA,QAAQ;YACN,cAAc;QAChB;IACF;AACF;AAGO,MAAM,eAAe,CAAC;;;qBAGR,EAAE,UAAU,KAAK,EAAE,aAAa;qBAChC,EAAE,UAAU,KAAK,EAAE,aAAa;qBAChC,EAAE,UAAU,KAAK,EAAE,aAAa;mBAClC,EAAE,UAAU,KAAK,EAAE,WAAW;kBAC/B,EAAE,UAAU,KAAK,EAAE,UAAU;4BACnB,EAAE,UAAU,KAAK,EAAE,mBAAmB;gBAClD,EAAE,UAAU,KAAK,EAAE,YAAY;0BACrB,EAAE,UAAU,KAAK,EAAE,iBAAiB;;;qBAGzC,EAAE,UAAU,KAAK,EAAE,aAAa;wBAC7B,EAAE,UAAU,KAAK,EAAE,eAAe;wBAClC,EAAE,UAAU,KAAK,EAAE,eAAe;;;iBAGzC,EAAE,UAAU,KAAK,EAAE,SAAS;oBACzB,EAAE,UAAU,KAAK,EAAE,WAAW;oBAC9B,EAAE,UAAU,KAAK,EAAE,WAAW;mBAC/B,EAAE,UAAU,KAAK,EAAE,WAAW;;;sBAG3B,EAAE,UAAU,KAAK,EAAE,cAAc;yBAC9B,EAAE,UAAU,KAAK,EAAE,gBAAgB;yBACnC,EAAE,UAAU,KAAK,EAAE,gBAAgB;;;kBAG1C,EAAE,UAAU,KAAK,EAAE,UAAU;4BACnB,EAAE,UAAU,KAAK,EAAE,mBAAmB;;;;;;;;;;AAUlE,CAAC;AAGM,MAAM,eAAe;IAC1B,QAAQ;QACN,SAAS;QACT,SAAS;QACT,SAAS;QACT,OAAO;QACP,MAAM;QACN,eAAe;IACjB;IACA,aAAa;QACX,SAAS;QACT,SAAS;QACT,SAAS;QACT,OAAO;QACP,WAAW;IACb;IACA,SAAS;QACP,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IACA,SAAS;QACP,QAAQ;QACR,UAAU;QACV,UAAU;IACZ;IACA,SAAS;QACP,SAAS;QACT,WAAW;QACX,WAAW;IACb;AACF","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///Users/halteverbotsocialmacpro/Desktop/ars%20vivai/HRthis/HRthis/refactor/fe-starter-pack-master/src/features/hr/services/api.ts"],"sourcesContent":["/**\n * HR API Service\n * Handles all API communication with the HRthis backend\n */\n\nimport axios from 'axios';\n\n// Base API configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000';\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for auth token\napiClient.interceptors.request.use((config) => {\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Response interceptor for error handling\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized - redirect to login\n      localStorage.removeItem('auth_token');\n      window.location.href = '/auth/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Employee API\nexport const employeeAPI = {\n  // Get all employees with filters\n  getEmployees: async (filters = {}) => {\n    const params = new URLSearchParams();\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) params.append(key, String(value));\n    });\n    \n    const response = await apiClient.get(`/api/employees?${params}`);\n    return response.data;\n  },\n\n  // Get employee by ID\n  getEmployee: async (id: string) => {\n    const response = await apiClient.get(`/api/employees/${id}`);\n    return response.data;\n  },\n\n  // Create new employee\n  createEmployee: async (employeeData: any) => {\n    const response = await apiClient.post('/api/employees', employeeData);\n    return response.data;\n  },\n\n  // Update employee\n  updateEmployee: async (id: string, employeeData: any) => {\n    const response = await apiClient.patch(`/api/employees/${id}`, employeeData);\n    return response.data;\n  },\n\n  // Delete employee (soft delete)\n  deleteEmployee: async (id: string) => {\n    await apiClient.delete(`/api/employees/${id}`);\n  },\n\n  // Send onboarding email\n  sendOnboardingEmail: async (id: string, preset: string) => {\n    const response = await apiClient.post(`/api/employees/${id}/send-onboarding-email`, {\n      preset\n    });\n    return response.data;\n  },\n\n  // Get onboarding status\n  getOnboardingStatus: async (id: string) => {\n    const response = await apiClient.get(`/api/employees/${id}/onboarding-status`);\n    return response.data;\n  }\n};\n\n// Auth API\nexport const authAPI = {\n  login: async (email: string, password: string) => {\n    const response = await apiClient.post('/api/auth/login', {\n      email,\n      password\n    });\n    return response.data;\n  },\n\n  logout: async () => {\n    localStorage.removeItem('auth_token');\n    // Could call backend logout endpoint if needed\n  },\n\n  getCurrentUser: async () => {\n    const response = await apiClient.get('/api/auth/me');\n    return response.data;\n  }\n};\n\n// File Upload API\nexport const fileAPI = {\n  uploadFile: async (file: File, category?: string) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    if (category) formData.append('category', category);\n\n    const response = await apiClient.post('/api/files/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  getFile: async (fileId: string) => {\n    const response = await apiClient.get(`/api/files/${fileId}`);\n    return response.data;\n  },\n\n  deleteFile: async (fileId: string) => {\n    await apiClient.delete(`/api/files/${fileId}`);\n  }\n};\n\nexport { apiClient };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///Users/halteverbotsocialmacpro/Desktop/ars%20vivai/HRthis/HRthis/refactor/fe-starter-pack-master/src/features/hr/hooks/useEmployees.ts"],"sourcesContent":["/**\n * Employee Hooks\n * React Query hooks for employee data management\n */\n\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { message } from 'antd';\nimport { employeeAPI } from '../services/api';\nimport { \n  Employee, \n  EmployeeFilters, \n  CreateEmployeeRequest, \n  UpdateEmployeeRequest \n} from '../types/employee';\n\n// Query Keys\nexport const employeeKeys = {\n  all: ['employees'] as const,\n  lists: () => [...employeeKeys.all, 'list'] as const,\n  list: (filters: EmployeeFilters) => [...employeeKeys.lists(), filters] as const,\n  details: () => [...employeeKeys.all, 'detail'] as const,\n  detail: (id: string) => [...employeeKeys.details(), id] as const,\n  onboarding: (id: string) => [...employeeKeys.all, 'onboarding', id] as const,\n};\n\n// Get Employees List\nexport const useEmployees = (filters: EmployeeFilters = {}) => {\n  return useQuery({\n    queryKey: employeeKeys.list(filters),\n    queryFn: () => employeeAPI.getEmployees(filters),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    gcTime: 10 * 60 * 1000, // 10 minutes\n  });\n};\n\n// Get Single Employee\nexport const useEmployee = (id: string) => {\n  return useQuery({\n    queryKey: employeeKeys.detail(id),\n    queryFn: () => employeeAPI.getEmployee(id),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\n// Get Onboarding Status\nexport const useOnboardingStatus = (id: string) => {\n  return useQuery({\n    queryKey: employeeKeys.onboarding(id),\n    queryFn: () => employeeAPI.getOnboardingStatus(id),\n    enabled: !!id,\n    staleTime: 2 * 60 * 1000, // 2 minutes\n  });\n};\n\n// Create Employee\nexport const useCreateEmployee = () => {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: CreateEmployeeRequest) => employeeAPI.createEmployee(data),\n    onSuccess: (newEmployee) => {\n      // Invalidate and refetch employees list\n      queryClient.invalidateQueries({ queryKey: employeeKeys.lists() });\n      \n      // Add the new employee to cache\n      queryClient.setQueryData(\n        employeeKeys.detail(newEmployee.id),\n        newEmployee\n      );\n\n      message.success(`Mitarbeiter ${newEmployee.fullName} wurde erfolgreich erstellt`);\n    },\n    onError: (error: any) => {\n      const errorMessage = error.response?.data?.detail || 'Fehler beim Erstellen des Mitarbeiters';\n      message.error(errorMessage);\n    },\n  });\n};\n\n// Update Employee\nexport const useUpdateEmployee = () => {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, data }: { id: string; data: UpdateEmployeeRequest }) =>\n      employeeAPI.updateEmployee(id, data),\n    onSuccess: (updatedEmployee, { id }) => {\n      // Update employee in cache\n      queryClient.setQueryData(\n        employeeKeys.detail(id),\n        updatedEmployee\n      );\n\n      // Invalidate lists to reflect changes\n      queryClient.invalidateQueries({ queryKey: employeeKeys.lists() });\n\n      message.success(`Mitarbeiter ${updatedEmployee.fullName} wurde aktualisiert`);\n    },\n    onError: (error: any) => {\n      const errorMessage = error.response?.data?.detail || 'Fehler beim Aktualisieren des Mitarbeiters';\n      message.error(errorMessage);\n    },\n  });\n};\n\n// Delete Employee\nexport const useDeleteEmployee = () => {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (id: string) => employeeAPI.deleteEmployee(id),\n    onSuccess: (_, id) => {\n      // Remove from cache\n      queryClient.removeQueries({ queryKey: employeeKeys.detail(id) });\n      \n      // Invalidate lists\n      queryClient.invalidateQueries({ queryKey: employeeKeys.lists() });\n\n      message.success('Mitarbeiter wurde erfolgreich gelÃ¶scht');\n    },\n    onError: (error: any) => {\n      const errorMessage = error.response?.data?.detail || 'Fehler beim LÃ¶schen des Mitarbeiters';\n      message.error(errorMessage);\n    },\n  });\n};\n\n// Send Onboarding Email\nexport const useSendOnboardingEmail = () => {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: ({ id, preset }: { id: string; preset: string }) =>\n      employeeAPI.sendOnboardingEmail(id, preset),\n    onSuccess: (_, { id }) => {\n      // Invalidate employee data and onboarding status\n      queryClient.invalidateQueries({ queryKey: employeeKeys.detail(id) });\n      queryClient.invalidateQueries({ queryKey: employeeKeys.onboarding(id) });\n      queryClient.invalidateQueries({ queryKey: employeeKeys.lists() });\n\n      message.success('Onboarding-Email wurde erfolgreich versendet');\n    },\n    onError: (error: any) => {\n      const errorMessage = error.response?.data?.detail || 'Fehler beim Versenden der Onboarding-Email';\n      message.error(errorMessage);\n    },\n  });\n};\n\n// Prefetch Employee\nexport const usePrefetchEmployee = () => {\n  const queryClient = useQueryClient();\n\n  return (id: string) => {\n    queryClient.prefetchQuery({\n      queryKey: employeeKeys.detail(id),\n      queryFn: () => employeeAPI.getEmployee(id),\n      staleTime: 5 * 60 * 1000,\n    });\n  };\n};\n\n// Optimistic Updates Helper\nexport const useOptimisticEmployeeUpdate = () => {\n  const queryClient = useQueryClient();\n\n  return {\n    updateEmployee: (id: string, updatedData: Partial<Employee>) => {\n      queryClient.setQueryData(\n        employeeKeys.detail(id),\n        (old: Employee | undefined) => old ? { ...old, ...updatedData } : undefined\n      );\n    },\n    rollbackEmployee: (id: string) => {\n      queryClient.invalidateQueries({ queryKey: employeeKeys.detail(id) });\n    },\n  };\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":["file:///Users/halteverbotsocialmacpro/Desktop/ars%20vivai/HRthis/HRthis/refactor/fe-starter-pack-master/src/features/hr/components/EmployeeCardSimple.tsx"],"sourcesContent":["import React from 'react';\nimport { Badge } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\ninterface Employee {\n  id: string;\n  fullName: string;\n  position: string;\n  status: string;\n}\n\ninterface EmployeeCardProps {\n  employee: Employee;\n  onEdit?: (employee: Employee) => void;\n  onDelete?: (employee: Employee) => void;\n  onSendOnboarding?: (employee: Employee) => void;\n}\n\nexport const EmployeeCardSimple: React.FC<EmployeeCardProps> = ({\n  employee,\n  onEdit,\n  onDelete,\n  onSendOnboarding\n}) => {\n  return (\n    <div className=\"w-full p-4 border rounded-lg shadow hover:shadow-md transition-shadow\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n            <UserOutlined className=\"text-blue-600\" />\n          </div>\n          <div>\n            <h3 className=\"font-semibold text-gray-900\">{employee.fullName}</h3>\n            <p className=\"text-sm text-gray-500\">{employee.position}</p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Badge status=\"success\" text={employee.status} />\n        </div>\n      </div>\n    </div>\n  );\n};"],"names":[],"mappings":";;;;AACA;AACA;;;;AAgBO,MAAM,qBAAkD,CAAC,EAC9D,QAAQ,EACR,MAAM,EACN,QAAQ,EACR,gBAAgB,EACjB;IACC,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAI,WAAU;sCACb,cAAA,qKAAC,2MAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;;;;;;sCAE1B,qKAAC;;8CACC,qKAAC;oCAAG,WAAU;8CAA+B,SAAS,QAAQ;;;;;;8CAC9D,qKAAC;oCAAE,WAAU;8CAAyB,SAAS,QAAQ;;;;;;;;;;;;;;;;;;8BAG3D,qKAAC;oBAAI,WAAU;8BACb,cAAA,qKAAC,yKAAA,CAAA,QAAK;wBAAC,QAAO;wBAAU,MAAM,SAAS,MAAM;;;;;;;;;;;;;;;;;;;;;;AAKvD","debugId":null}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":["file:///Users/halteverbotsocialmacpro/Desktop/ars%20vivai/HRthis/HRthis/refactor/fe-starter-pack-master/src/features/hr/types/employee.ts"],"sourcesContent":["/**\n * Employee Types\n * TypeScript definitions for HR employee data\n */\n\n// Enums\nexport enum EmploymentType {\n  FULLTIME = 'fulltime',\n  PARTTIME = 'parttime',\n  MINIJOB = 'minijob',\n  INTERN = 'intern',\n  OTHER = 'other'\n}\n\nexport enum EmployeeStatus {\n  ACTIVE = 'active',\n  PROBATION = 'probation',\n  INACTIVE = 'inactive',\n  TERMINATED = 'terminated'\n}\n\nexport enum UserRole {\n  USER = 'user',\n  ADMIN = 'admin',\n  SUPERADMIN = 'superadmin'\n}\n\n// Interfaces\nexport interface ClothingSizes {\n  top?: string;\n  pants?: string;\n  shoes?: string;\n}\n\nexport interface EmergencyContact {\n  name: string;\n  phone: string;\n  relation: string;\n}\n\nexport interface Employee {\n  id: string;\n  employeeNumber: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  fullName: string;\n  birthDate?: string;\n  phone?: string;\n  address?: string;\n  emergencyContact?: EmergencyContact;\n  \n  // Employment\n  employmentType: EmploymentType;\n  employmentTypeCustom?: string;\n  employmentTypeDisplay: string;\n  position: string;\n  department?: string;\n  startDate: string;\n  endDate?: string;\n  probationEnd?: string;\n  \n  // NEW: Clothing Sizes\n  clothingSizes?: ClothingSizes;\n  \n  // Status\n  status: EmployeeStatus;\n  role: UserRole;\n  isActive: boolean;\n  isAdmin: boolean;\n  \n  // Onboarding\n  onboardingCompleted: boolean;\n  onboardingEmailSent?: string;\n  onboardingPreset?: string;\n  \n  // HR Data\n  salary?: number;\n  vacationDays: number;\n  \n  // Documents\n  documents: string[];\n  \n  // Metadata\n  createdAt: string;\n  updatedAt: string;\n  createdBy?: string;\n}\n\nexport interface CreateEmployeeRequest {\n  email: string;\n  password: string;\n  employeeNumber: string;\n  firstName: string;\n  lastName: string;\n  birthDate?: string;\n  phone?: string;\n  address?: string;\n  emergencyContact?: EmergencyContact;\n  \n  employmentType: EmploymentType;\n  employmentTypeCustom?: string;\n  position: string;\n  department?: string;\n  startDate: string;\n  endDate?: string;\n  probationEnd?: string;\n  \n  clothingSizes?: ClothingSizes;\n  \n  status?: EmployeeStatus;\n  role?: UserRole;\n  salary?: number;\n  vacationDays?: number;\n  \n  // Onboarding\n  sendOnboardingEmail?: boolean;\n  onboardingPreset?: string;\n}\n\nexport interface UpdateEmployeeRequest {\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  birthDate?: string;\n  phone?: string;\n  address?: string;\n  emergencyContact?: EmergencyContact;\n  \n  employmentType?: EmploymentType;\n  employmentTypeCustom?: string;\n  position?: string;\n  department?: string;\n  endDate?: string;\n  probationEnd?: string;\n  \n  clothingSizes?: ClothingSizes;\n  \n  status?: EmployeeStatus;\n  role?: UserRole;\n  salary?: number;\n  vacationDays?: number;\n}\n\nexport interface EmployeeFilters {\n  search?: string;\n  department?: string;\n  status?: EmployeeStatus;\n  employmentType?: EmploymentType;\n  role?: UserRole;\n  page?: number;\n  size?: number;\n}\n\nexport interface EmployeeListResponse {\n  employees: Employee[];\n  total: number;\n  page: number;\n  size: number;\n}\n\nexport interface OnboardingEmailPreset {\n  id: string;\n  name: string;\n  displayName: string;\n  subject: string;\n  template: string;\n  variables: string[];\n}\n\n// Form Types\nexport interface EmployeeFormData {\n  // Basic Info\n  email: string;\n  firstName: string;\n  lastName: string;\n  employeeNumber: string;\n  password?: string;\n  \n  // Personal\n  birthDate?: string;\n  phone?: string;\n  address?: string;\n  emergencyContact?: EmergencyContact;\n  \n  // Employment\n  employmentType: EmploymentType;\n  employmentTypeCustom?: string;\n  position: string;\n  department?: string;\n  startDate: string;\n  endDate?: string;\n  probationEnd?: string;\n  \n  // NEW: Clothing Sizes\n  clothingSizes?: ClothingSizes;\n  \n  // Status\n  status: EmployeeStatus;\n  role: UserRole;\n  salary?: number;\n  vacationDays: number;\n  \n  // Onboarding\n  sendOnboardingEmail?: boolean;\n  onboardingPreset?: string;\n}\n\nexport interface EmployeeFormErrors {\n  [key: string]: string;\n}"],"names":[],"mappings":"AAAA;;;CAGC,GAED,QAAQ;;;;;;AACD,IAAA,AAAK,wCAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,wCAAA;;;;;WAAA;;AAOL,IAAA,AAAK,kCAAA;;;;WAAA","debugId":null}}]
}